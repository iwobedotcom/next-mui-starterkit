'use client';

/* eslint-disable @typescript-eslint/no-explicit-any */
// ** React Import
import React from 'react';
// ** Loader Import
import NProgress from 'nprogress';
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import { CacheProvider } from '@emotion/react';
// ** Config Imports
import themeConfig from '@/configs/theme.config';
// ** Emotion Imports
import type { EmotionCache } from '@emotion/cache';
import ThemeComponent from '@/theme/theme-component';
import { createEmotionCache } from '@/utils/emotion-cache';
// ** Next Imports
import { usePathname, useSearchParams } from 'next/navigation';
// ** Contexts
import { SettingsConsumer, SettingsProvider } from '@/contexts/settings.context';

// ** Global CSS
import './globals.css';

const inter = Inter({ subsets: ['latin'] });

// ** Metadata
export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

interface RootLayoutProps {
  children: React.ReactNode;
  emotionCache: EmotionCache;
}

const clientSideEmotionCache = createEmotionCache();

export default function RootLayout({
  children,
  emotionCache = clientSideEmotionCache,
}: RootLayoutProps): React.ReactElement {
  const pathname = usePathname();
  const searchParams = useSearchParams();

  // ** Pace Loader
  React.useEffect(() => {
    if (themeConfig.routingLoader) {
      NProgress.done();
    }

    // Return a default value, such as an empty function or undefined
    return () => {
      NProgress.start();
    };
    // return () => {};
  }, [pathname, searchParams]);

  return (
    <CacheProvider value={emotionCache}>
      <SettingsProvider>
        <SettingsConsumer>
          {({ settings }) => (
            <ThemeComponent settings={settings}>
              <html lang="en">
                <body className={inter.className}>{children}</body>
              </html>
            </ThemeComponent>
          )}
        </SettingsConsumer>
      </SettingsProvider>
    </CacheProvider>
  );
}
